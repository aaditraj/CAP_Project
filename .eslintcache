[{"/Users/araj/Desktop/Coding/cap/cap_project/src/index.js":"1","/Users/araj/Desktop/Coding/cap/cap_project/src/App.js":"2","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Login/Login.js":"3","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/Dropdown/Dropdown.js":"4","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/TrueFalse/TrueFalse.js":"5","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/Report/GeneratePDF.js":"6","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/MultChoice/MultChoice.js":"7","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/Report/Statistics.js":"8","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Leaderboard/Leaderboard.js":"9","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/DataFetching/GetData.js":"10","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/FillTheBlank/FillTheBlank.js":"11","/Users/araj/Desktop/Coding/cap/cap_project/src/App-test.js":"12","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/Quiz.js":"13","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Feedback/Feedback.js":"14","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Past-Quizzes/Past-Quizzes.js":"15","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Home/Home.js":"16"},{"size":3752,"mtime":1624147879042,"results":"17","hashOfConfig":"18"},{"size":26556,"mtime":1622923999947,"results":"19","hashOfConfig":"18"},{"size":18938,"mtime":1624144871357,"results":"20","hashOfConfig":"18"},{"size":3995,"mtime":1622218835641,"results":"21","hashOfConfig":"18"},{"size":2674,"mtime":1622175122077,"results":"22","hashOfConfig":"18"},{"size":2270,"mtime":1624048776681,"results":"23","hashOfConfig":"18"},{"size":4079,"mtime":1622218443715,"results":"24","hashOfConfig":"18"},{"size":2310,"mtime":1624066846000,"results":"25","hashOfConfig":"18"},{"size":4405,"mtime":1624084086285,"results":"26","hashOfConfig":"18"},{"size":8728,"mtime":1623816696095,"results":"27","hashOfConfig":"18"},{"size":2745,"mtime":1614320195834,"results":"28","hashOfConfig":"18"},{"size":11422,"mtime":1624147986405,"results":"29","hashOfConfig":"18"},{"size":23316,"mtime":1624144617239,"results":"30","hashOfConfig":"18"},{"size":13361,"mtime":1624044839094,"results":"31","hashOfConfig":"18"},{"size":650,"mtime":1623871636692,"results":"32","hashOfConfig":"18"},{"size":1761,"mtime":1624130968282,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d1tjwl",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"43"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"43"},"/Users/araj/Desktop/Coding/cap/cap_project/src/index.js",[],"/Users/araj/Desktop/Coding/cap/cap_project/src/App.js",[],["74","75"],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Login/Login.js",["76","77","78","79","80","81"],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/Dropdown/Dropdown.js",[],["82","83"],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/TrueFalse/TrueFalse.js",["84","85"],"import React from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\"\nimport Button from \"react-bootstrap/Button\"\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\"\nimport \"./TrueFalse.css\"\nimport checkmark from \"../../../assets/check.svg\"\nimport xmark from \"../../../assets/x.svg\"\nimport { Form } from \"react-bootstrap\";\n\n//Displays true-false dropdown for quiz page and a results display\n\nclass TrueFalse extends React.Component {\n    render() {\n        if (this.props.disabled === 'false'){\n\n            return (\n                // <Dropdown id=\"dropdown-button\" as={ButtonGroup} onSelect = {this.props.onSelect}>\n                //     <Button variant=\"secondary\">{this.props.value}</Button>\n    \n                //     <Dropdown.Toggle split variant=\"secondary\" id=\"dropdown-split-basic\" />\n    \n                //     <Dropdown.Menu>\n                //         <Dropdown.Item eventKey=\"True\">True</Dropdown.Item>\n                //         <Dropdown.Item eventKey=\"False\">False</Dropdown.Item>\n                //     </Dropdown.Menu>\n                // </Dropdown>\n                <Form>\n                    <Form.Group>\n                        <Form.Check \n                        type=\"radio\"\n                        key={`formHorizontalRadios1`}\n                        label=\"True\"\n                        name=\"formHorizontalRadios\"\n                        onChange = {(e) => this.props.onSelect}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Check \n                        type=\"radio\"\n                        key={`formHorizontalRadios1`}\n                        label=\"False\"\n                        name=\"formHorizontalRadios\"\n                        onChange = {(e) => this.props.onSelect}\n                        />\n                    </Form.Group>\n                </Form>\n                    \n                \n            )\n        } else{\n            return(\n                <div className = 'TF-result'>\n                    <Button disabled \n                    className = {this.props.answer ? 'correctTF' : 'incorrectTF'}>\n                    True <img src = {this.props.answer ? checkmark : xmark}\n                        alt = {this.props.answer ? 'checkmark' : 'xmark'}\n                    /></Button>\n                    <Button disabled \n                    className = {this.props.answer ? 'incorrectTF' : 'correctTF'}>\n                    False <img src = {this.props.answer ? xmark : checkmark}\n                    alt = {this.props.answer ? 'xmark' : 'checkmark'}/></Button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default TrueFalse;",["86","87"],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/Report/GeneratePDF.js",[],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/MultChoice/MultChoice.js",[],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/Report/Statistics.js",[],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Leaderboard/Leaderboard.js",[],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/DataFetching/GetData.js",[],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/FillTheBlank/FillTheBlank.js",[],"/Users/araj/Desktop/Coding/cap/cap_project/src/App-test.js",["88","89","90","91"],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/Quiz.js",["92"],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Feedback/Feedback.js",["93"],"import React from \"react\"\nimport firebase from 'firebase';\nimport \"./Feedback.css\"\n\n\n//React Bootstrap components\nimport { Form, Col}  from \"react-bootstrap\"\nimport Button from \"react-bootstrap/Button\"\nimport Card from \"react-bootstrap/Card\"\nimport Alert from \"react-bootstrap/Alert\"\nimport Jumbotron from \"react-bootstrap/Jumbotron\"\nimport {Link} from \"react-router-dom\"\nclass Feedback extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            topic: \"\",\n            question_type: \"\",\n            question: \"\",\n            answer: \"\",\n            choices: [\"\", \"\", \"\", \"\"],\n            question_submission_state: \"\",\n            feedback: \"\",\n            feedback_submission_state: \"\",\n            question_disabled: true,\n            feedback_disabled: true\n        }\n    }\n\n   \n\n    handleTopicSelect = (e) => {\n        this.setState({\n            topic: e.target.value\n        }, () => {this.checkQuestionValidity()})\n        console.log(e.target.value)\n    }\n\n    handleTypeSelect = (e) => {\n        this.setState({\n            question_type: e.target.value\n        },   () => {this.checkQuestionValidity()})\n        console.log(e.target.value)\n    }\n\n    handleQuestionChange = (e) => {\n        this.setState({\n            question: e.target.value\n        },  () => {this.checkQuestionValidity()})\n        console.log(e.target.value)\n    }\n\n    handleAnswerChange = (e) => {\n        this.setState({\n            answer: e.target.value\n        }, () => {this.checkQuestionValidity()})\n        console.log(e.target.value)\n    }\n\n    addChoice = (e, i) => {\n        var newChoices = this.state.choices\n        newChoices[i] = e.target.value\n        this.setState({\n            choices: newChoices\n        }, () => {this.checkQuestionValidity()})\n        console.log(e.target.value)\n    }\n\n    isFieldEmpty = (field) => {\n        return (field === null || field.replace(/\\s/g, '').length === 0)\n    }\n\n    isArrayEmpty = (field) => {\n        for(let i = 0; i < field.length; i++){\n            if (this.isFieldEmpty(field[i])){\n                return true\n            }\n        }\n        return false\n    }\n\n    checkQuestionValidity = () => {\n        if (!this.isFieldEmpty(this.state.topic) && !this.isFieldEmpty(this.state.question_type)\n        && !this.isFieldEmpty(this.state.question) && !this.isFieldEmpty(this.state.answer)) {\n            switch (this.state.question_type){\n                case (\"Multiple Choice\"):\n                    if (this.isArrayEmpty(this.state.choices)){\n                        this.setState({question_disabled: true})\n                    } else {\n                        this.setState({question_disabled: false})\n                    }\n                    break;\n                case (\"DropDown\"):\n                    if (this.isArrayEmpty(this.state.choices.slice(0, 3))){\n                        this.setState({question_disabled: true})\n                    } else {\n                        this.setState({question_disabled: false})\n                    }\n                    break;\n                default:\n                    this.setState({question_disabled: false})\n            }\n        } else {\n            this.setState({question_disabled: true})\n        }\n    }\n\n\n    handleFeedbackChange = (e) => {\n        this.setState({\n            feedback: e.target.value\n        }, () => this.checkFeedbackValidity())\n        console.log(e.target.value)\n    }\n\n    checkFeedbackValidity = () => {\n        if (this.isFieldEmpty(this.state.feedback)){\n            this.setState({\n                feedback_disabled: true\n            })\n        } else {\n            this.setState({\n                feedback_disabled: false\n            })\n        }\n    }\n\n    sendFeedback = (e) => {\n        console.log(\"sending message!\")\n        var db = firebase.apps[0].firestore()\n        db.collection(\"Feedback\").doc(\"Messages\").collection(\"Messages\").add({\n            Email: firebase.auth().currentUser.email,\n            Message: this.state.feedback\n        })\n        this.setState({\n            feedback_submission_state: <Alert variant=\"success\" dismissible\n            onClose={()=>{this.setState({feedback_submission_state:null})}}>Message sent successfully!</Alert>,\n            feedback: \"\",\n            feedback_disabled: true\n    })\n    }\n\n    sendQuestion = (e) => {\n            console.log(\"sending question!\")\n            var db = firebase.apps[0].firestore()\n            var choices = this.state.choices\n            if (choices[3] === null){\n                db.collection(\"Feedback\").doc(\"Suggestions\").collection(\"Questions\").add({\n                    Topic: this.state.topic,\n                    Type: this.state.question_type,\n                    Question: this.state.question,\n                    Choices: this.state.choices.slice(0, 3),\n                    Answer: this.state.answer\n                })\n            } else {\n                db.collection(\"Feedback\").doc(\"Suggestions\").collection(\"Questions\").add({\n                    Topic: this.state.topic,\n                    Type: this.state.question_type,\n                    Question: this.state.question,\n                    Choices: this.state.choices,\n                    Answer: this.state.answer\n                })\n            }\n            this.setState({\n                question_submission_state: <Alert variant=\"success\" dismissible\n                onClose={()=>{this.setState({question_submission_state:null})}}>Question sent successfully!</Alert>,\n                topic: \"\",\n                question_type: \"\",\n                question: \"\",\n                answer: \"\",\n                choices: [\"\", \"\", \"\", \"\"],\n                question_disabled: true\n        })\n    }\n\n    render() {\n        let components = []\n        switch(this.state.question_type){\n            case(\"DropDown\"):\n                components = [\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridChoice1\">\n                        <Form.Label>Choice 1</Form.Label>\n                        <Form.Control value={this.state.choices[0]} \n                        onChange={(e) => {this.addChoice(e, 0)}}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">Please provide 3 choices</Form.Control.Feedback>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridChoice2\">\n                        <Form.Label>Choice 2</Form.Label>\n                        <Form.Control value={this.state.choices[1]} \n                        onChange={(e) => {this.addChoice(e, 1)}}\n                        />\n                        </Form.Group>\n                    \n                        <Form.Group as={Col} controlId=\"formGridChoice3\">\n                        <Form.Label>Choice3</Form.Label>\n                        <Form.Control value={this.state.choices[2]} \n                        onChange={(e) => {this.addChoice(e, 2)}}\n                        />\n                        </Form.Group>\n                    </Form.Row> \n                ]\n                break;\n            case(\"MultipleChoice\"):\n                components = [\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formGridChoice1\">\n                        <Form.Label>Choice 1</Form.Label>\n                        <Form.Control value={this.state.choices[0]} \n                        onChange={(e) => {this.addChoice(e, 0)}}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">Please provide 4 choices</Form.Control.Feedback>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridChoice2\">\n                        <Form.Label>Choice 2</Form.Label>\n                        <Form.Control value={this.state.choices[1]} \n                        onChange={(e) => {this.addChoice(e, 1)}}\n                        />\n                        </Form.Group>\n                    \n                        <Form.Group as={Col} controlId=\"formGridChoice3\">\n                        <Form.Label>Choice 3</Form.Label>\n                        <Form.Control value={this.state.choices[2]} \n                        onChange={(e) => {this.addChoice(e, 2)}}\n                        />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formGridChoice4\">\n                        <Form.Label>Choice 4</Form.Label>\n                        <Form.Control value={this.state.choices[3]} \n                         onChange={(e) => {this.addChoice(e, 3)}}\n                         />\n                        </Form.Group>\n                    </Form.Row> \n                ]\n                break;\n            default:\n                components = []\n \n        }\n        return(\n            <div className = \"feedback-page\">\n                <Jumbotron className = \"jumbo\">\n                    <h1>FBLA Expert</h1>\n                    <h4>Help Us Improve!</h4>\n                </Jumbotron>\n                <div className=\"feedback\">\n                <Card className = \"feedback-input\" bg=\"light\">\n                    <h2>Suggest a Question!</h2>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Topic</Form.Label>\n                            <Form.Control value={this.state.topic} as=\"select\"\n                            onChange={ (e) => {this.handleTopicSelect(e)} }\n                            >\n                                <option value=\"\">Select</option>\n                                <option value=\"Know Your Numbers\">Know Your Numbers</option>\n                                <option value=\"Dates and Times\">Dates and Times</option>\n                                <option value=\"People\">People</option>\n                                <option value=\"Places\">Places</option>\n                                <option value=\"Terms, Creeds, Mottos\">Terms, Creeds, Mottos</option>\n                                <option value=\"Potpourri\">Potpourri</option>\n\n                            </Form.Control>\n                            {/* <Form.Control.Feedback type=\"invalid\">Please choose a topic.</Form.Control.Feedback> */}\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Question Type</Form.Label>\n                            <Form.Control value={this.state.question_type} as=\"select\" \n                            onChange={ (e) => {this.handleTypeSelect(e)} }>\n                                <option value=\"\">Select</option>\n                                <option value=\"DropDown\">Dropdown</option>\n                                <option value=\"FillInTheBlank\">Fill in the Blank</option>\n                                <option value=\"MultipleChoice\">Multiple Choice</option>\n                                <option value=\"TrueFalse\">True/False</option>\n                            </Form.Control>\n                            {/* <Form.Control.Feedback type=\"invalid\">Please choose a question type.</Form.Control.Feedback> */}\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Question</Form.Label>\n                            <Form.Control value={this.state.question}\n                            placeholder=\"Enter question\"\n                            onChange={ (e) => {this.handleQuestionChange(e)}}/>\n                            {/* <Form.Control.Feedback type=\"invalid\">Please provide a question.</Form.Control.Feedback> */}\n                        </Form.Group>\n                        {components}\n                        <Form.Group>\n                            <Form.Label>Answer</Form.Label>\n                            <Form.Control value={this.state.answer}\n                            placeholder=\"Enter answer\"\n                            onChange={ (e) => {this.handleAnswerChange(e)} }/>\n                            {/* <Form.Control.Feedback type=\"invalid\">Please provide an answer.</Form.Control.Feedback> */}\n                        </Form.Group>\n                        {this.state.question_submission_state}\n                        <Button disabled={this.state.question_disabled} className = \"send-question\"\n                        onClick={this.sendQuestion}>Send!</Button>\n                    </Form>\n                </Card>\n                <Card className = \"feedback-input\" bg=\"light\">\n                    <h2>Send Us Feedback!</h2>\n                    <Form>\n                        <Form.Group>\n                            <Form.Label>Message</Form.Label>\n                            <Form.Control value={this.state.feedback} as=\"textarea\"  rows={3}\n                            onChange={ (e) => {this.handleFeedbackChange(e)} }\n                            />\n                            {/* <Form.Control.Feedback type=\"invalid\">Please enter a message.</Form.Control.Feedback> */}\n                        </Form.Group>\n                        {this.state.feedback_submission_state}\n                        <Button disabled={this.state.feedback_disabled} className = \"send-feedback\"\n                        onClick={this.sendFeedback}>Send!</Button>\n                    </Form>\n                </Card>\n                \n            </div>\n            </div>\n        )\n    }\n}\n\nexport default Feedback;","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Past-Quizzes/Past-Quizzes.js",["94"],"import React from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport 'firebase/firestore';\n\nconst showPastQuizzes = () =>{\n\n        var currentUserEmail = firebase.auth().currentUser.email\n        var storage = firebase.storage()\n        var pathRef = storage.ref().child(`Results/${currentUserEmail}`)\n        pathRef.listAll().then((res) => {\n            res.items.forEach((itemRef) => {\n                console.log(itemRef)\n                itemRef.getMetadata().then((metaData) => {\n                    console.log(metaData.timeCreated, metaData.Score, metaData.Topic)\n                })\n            })\n        })\n}\n\nexport default showPastQuizzes;",["95","96"],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Home/Home.js",["97"],"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport 'firebase/firestore';\nimport {\n    Link\n  } from \"react-router-dom\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Button from \"react-bootstrap/Button\"\n\nconst Home = () => {\n    let components = [];\n    let topics = [\"Know Your Numbers\", \"Dates and Times\", \"People\", \"Places\", \"Terms, Creeds, Mottos\", \"Potpourri\"]\n    for (let index = 0; index < topics.length; index++) {\n        var path = \"/\" + topics[index]\n        components.push(\n            <div className=\"topic-container\">\n                {/* <Image src=\"https://logodix.com/logo/1610537.png\" alt={topics[index]} className=\"topic-image\"/> */}\n                <div className=\"topic-image\" id={topics[index].split(\" \")[0]}>\n                {/* <Button className=\"middle\" onClick = {() => this.handleTopicSelect(topics[index])}>{topics[index]}</Button> */}\n                {/* <Link className=\"middle\" to={path}>{topics[index]}</Link> */}\n                <Button className=\"middle\" as={Link} to={path}>{topics[index]}</Button>\n                </div>\n            </div>\n        )   \n    }\n    return (\n       \n       \n                <div>\n                    <Jumbotron className = \"jumbo\">\n                        <h1>FBLA Expert</h1>\n                        {/* <h3>Welcome, {firebase.auth().currentUser.displayName.split(\" \")[0]}!</h3> */}\n                        <h4>Choose a Quiz Topic Below!</h4>\n                    </Jumbotron>\n                    <div id=\"Choose-Topics\">\n\n                        <div className=\"topics-wrapper\">\n                            {components}\n                        </div>\n                        \n\n                    </div>\n                </div>\n            )\n}\n\nexport default Home;",{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":226,"column":32,"nodeType":"104","endLine":226,"endColumn":47},{"ruleId":"102","severity":1,"message":"103","line":229,"column":32,"nodeType":"104","endLine":229,"endColumn":47},{"ruleId":"102","severity":1,"message":"103","line":232,"column":32,"nodeType":"104","endLine":232,"endColumn":47},{"ruleId":"102","severity":1,"message":"103","line":353,"column":32,"nodeType":"104","endLine":353,"endColumn":47},{"ruleId":"102","severity":1,"message":"103","line":356,"column":32,"nodeType":"104","endLine":356,"endColumn":47},{"ruleId":"102","severity":1,"message":"103","line":359,"column":32,"nodeType":"104","endLine":359,"endColumn":47},{"ruleId":"98","replacedBy":"105"},{"ruleId":"100","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":16},{"ruleId":"107","severity":1,"message":"111","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":19},{"ruleId":"98","replacedBy":"112"},{"ruleId":"100","replacedBy":"113"},{"ruleId":"107","severity":1,"message":"114","line":24,"column":8,"nodeType":"109","messageId":"110","endLine":24,"endColumn":13},{"ruleId":"102","severity":1,"message":"103","line":283,"column":24,"nodeType":"104","endLine":283,"endColumn":39},{"ruleId":"102","severity":1,"message":"103","line":286,"column":24,"nodeType":"104","endLine":286,"endColumn":39},{"ruleId":"102","severity":1,"message":"103","line":289,"column":24,"nodeType":"104","endLine":289,"endColumn":39},{"ruleId":"107","severity":1,"message":"115","line":11,"column":8,"nodeType":"109","messageId":"110","endLine":11,"endColumn":15},{"ruleId":"107","severity":1,"message":"116","line":12,"column":9,"nodeType":"109","messageId":"110","endLine":12,"endColumn":13},{"ruleId":"107","severity":1,"message":"117","line":1,"column":8,"nodeType":"109","messageId":"110","endLine":1,"endColumn":13},{"ruleId":"98","replacedBy":"118"},{"ruleId":"100","replacedBy":"119"},{"ruleId":"107","severity":1,"message":"120","line":1,"column":8,"nodeType":"109","messageId":"110","endLine":1,"endColumn":16},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["121"],["122"],"no-unused-vars","'Dropdown' is defined but never used.","Identifier","unusedVar","'ButtonGroup' is defined but never used.",["121"],["122"],"'Alert' is defined but never used.","'Spinner' is defined but never used.","'Link' is defined but never used.","'React' is defined but never used.",["121"],["122"],"'firebase' is defined but never used.","no-global-assign","no-unsafe-negation"]