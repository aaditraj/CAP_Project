[{"/Users/araj/Desktop/Coding/cap/cap_project/src/index.js":"1","/Users/araj/Desktop/Coding/cap/cap_project/src/App.js":"2","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Login/Login.js":"3","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/Dropdown/Dropdown.js":"4","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/TrueFalse/TrueFalse.js":"5","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/Report/GeneratePDF.js":"6","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/MultChoice/MultChoice.js":"7","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/Report/Statistics.js":"8","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Leaderboard/Leaderboard.js":"9","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/DataFetching/GetData.js":"10","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/FillTheBlank/FillTheBlank.js":"11","/Users/araj/Desktop/Coding/cap/cap_project/src/App-test.js":"12","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/Quiz.js":"13","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Feedback/Feedback.js":"14","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Past-Quizzes/Past-Quizzes.js":"15","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Home/Home.js":"16"},{"size":3750,"mtime":1622925043403,"results":"17","hashOfConfig":"18"},{"size":26556,"mtime":1622923999947,"results":"19","hashOfConfig":"18"},{"size":18671,"mtime":1623737920075,"results":"20","hashOfConfig":"18"},{"size":3995,"mtime":1622218835641,"results":"21","hashOfConfig":"18"},{"size":2674,"mtime":1622175122077,"results":"22","hashOfConfig":"18"},{"size":1886,"mtime":1623533145533,"results":"23","hashOfConfig":"18"},{"size":4079,"mtime":1622218443715,"results":"24","hashOfConfig":"18"},{"size":2300,"mtime":1623871192009,"results":"25","hashOfConfig":"18"},{"size":4255,"mtime":1623871637666,"results":"26","hashOfConfig":"18"},{"size":8728,"mtime":1623816696095,"results":"27","hashOfConfig":"18"},{"size":2745,"mtime":1614320195834,"results":"28","hashOfConfig":"18"},{"size":11265,"mtime":1623879558526,"results":"29","hashOfConfig":"18"},{"size":23118,"mtime":1623872806119,"results":"30","hashOfConfig":"18"},{"size":11586,"mtime":1623891465206,"results":"31","hashOfConfig":"18"},{"size":650,"mtime":1623871636692,"results":"32","hashOfConfig":"18"},{"size":1761,"mtime":1623890233069,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1d1tjwl",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/araj/Desktop/Coding/cap/cap_project/src/index.js",[],["74","75"],"/Users/araj/Desktop/Coding/cap/cap_project/src/App.js",[],["76","77"],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Login/Login.js",["78","79","80","81","82","83"],"import React from \"react\"\n\n//React Bootstrap components\nimport Form from \"react-bootstrap/Form\"\nimport Button from \"react-bootstrap/Button\"\nimport Card from \"react-bootstrap/Card\"\nimport Alert from \"react-bootstrap/Alert\"\nimport Image from \"react-bootstrap/Image\"\nimport Jumbotron from \"react-bootstrap/Jumbotron\"\n\nimport fblaLogo from \"/Users/araj/Desktop/Coding/cap/cap_project/src/assets/fbla-logo.png\"\nimport cafblaLogo from \"/Users/araj/Desktop/Coding/cap/cap_project/src/assets/cafbla-logo.png\"\n\n//Styling for login and account creation page\nimport \"./Login.css\"\n\nclass LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.passwordInfo = <Button className=\"password-pop\" size = 'sm' onClick = {this.popPasswordRules}\n        variant = \"link\">Password Rules</Button>\n        this.state = {\n            create : false,\n            login_error: null,\n            password_info : this.passwordInfo,\n            message: null,\n            new_email: null,\n            new_password: null,\n            retype_password: null,\n            login_email: null,\n            login_pw: null,\n            firstName: null,\n            lastName: null\n        }\n    }\n\n    //detecting if there is login error or\n    //account creation error from props passed in App file\n    componentDidUpdate(prevProps){  \n        if (!(prevProps.error)) {\n            if (this.props.error){\n                this.setState({\n                    login_error: <Alert variant = \"danger\" dismissible\n                    onClose = {() => this.setState({login_error: null})}>Invalid Login</Alert>\n                })\n                this.forceUpdate()\n            }\n        } if (!(prevProps.create_error)) {\n            if (this.props.create_error){\n                this.setState({\n                    message: this.CreateAlert(this.props.create_error_message \n                        + \" Redirecting to login page...\")\n                })\n                setTimeout(() => {window.location.reload()}, 3000)\n            }\n        }  \n    }\n\n    handleCreatePasswordChange = (password) => {\n        this.setState({\n            new_password: password,\n        })\n    }\n    \n    //creates a popup displaying password rules when clicking \n    //'Password Rules' link\n    popPasswordRules = () => {\n        this.setState({\n            password_info:  <Alert dismissible \n            onClose = {() => this.setState({password_info : this.passwordInfo})}variant = \"secondary\"\n            >Your password must:\n            <li>Be at least 8 characters long</li>\n            <li>Contain at least 2 uppercase letters</li>\n            <li>Contain at least one special character</li>\n            <li>Contain at least 2 digits</li>\n            <li>Contain at least 3 lowercase letters</li>\n            </Alert>\n        })\n    }\n\n    isFieldEmpty = (field) => {\n        return (field === null || field.replace(/\\s/g, '').length === 0)\n    }\n\n    CreateAlert = (message) => {\n        return <Alert variant=\"danger\" dismissible \n        onClose = {() => this.setState({\n            message: null\n        })}>{message}</Alert>\n    }\n\n    //checks if fields are empty, password mismatch,\n    //password rules violation, and invalid email using regex\n    handleCreate = (firstName, lastName, email, password, retype) => {\n        if (this.isFieldEmpty(firstName) || this.isFieldEmpty(lastName) || this.isFieldEmpty(email) \n            || this.isFieldEmpty(password)){\n            this.setState({\n                message: this.CreateAlert(\"All fields are required\")\n            })\n        } else if (password !== retype){\n            this.setState({\n                message: this.CreateAlert(\"Passwords are not matching\")\n            })\n        } else if (!(password.match(/^.*[A-Z].*[A-Z].*$/))){\n            this.setState({\n                message: this.CreateAlert(\"Password must contain at least 2 uppercase letters\")\n            })\n        } else if (!(password.match(/^.*[!@#$&*].*$/))){\n            this.setState({\n                message: this.CreateAlert(\"Password must contain at least one special character (!, @, #, etc.)\")\n            })\n        } else if (!(password.match(/^.*[0-9].*[0-9].*$/))){\n            this.setState({\n                message: this.CreateAlert(\"Password must contain at least 2 digits\")\n            })\n        } else if (!(password.match(/^.*[a-z].*[a-z].*[a-z].*$/))){\n            this.setState({\n                message: this.CreateAlert(\"Password must contain at least 3 lowercase letters\")\n            })\n        } else if (!(password.match(/^.{8,}$/))){\n            this.setState({\n                message: this.CreateAlert(\"Password must contain at least 8 characters\")\n            })\n        } else if (!(email.match(/^\\S+@\\S+\\.\\S+$/))) {\n            this.setState({\n                message: this.CreateAlert(\"Email is not in proper format\")\n            })\n        }  \n        else {\n            this.setState({\n                message: null\n            })\n            this.props.onCreate(firstName, lastName, email, password)\n        }\n    }\n\n    //if no error, calls the login function from App file\n    handleLogin = (email, password) => {\n        if (this.isFieldEmpty(email) || this.isFieldEmpty(password)){\n            this.setState({\n                login_error: <Alert variant=\"danger\" dismissible \n                onClose = {() => this.setState({login_error: null})}>All fields are required</Alert>\n            })\n        } else {\n            this.props.onLogin(email, password)\n        }\n    }\n\n    //render for two cases: user creates account and user is logging in\n    render() {\n        if (this.state.create){\n            return (\n                <div className = \"home-screen\">\n                    <Jumbotron className = \"jumbo\">\n                        <h1>FBLA Expert</h1>\n                        <h4>Test Your Knowledge About FBLA!</h4>\n                    </Jumbotron>\n                    <div className = \"home-screen-content\">\n                        {/* <Card bg = \"light\" text = \"dark\"> */}\n                        {/* <Card.Header className = \"card-header\"><h2>Login</h2></Card.Header> */}\n                        <Card className = \"create-account-wrapper\" bg=\"light\">\n                            <h2>Create an Account</h2>\n                            <Form className = \"form-login-wrapper\">\n                                 <Form.Group>\n                                     <h6 className = 'login-h6'>First Name</h6>\n                                     <Form.Control onChange = {(e) => \n                                        this.setState({firstName: e.target.value})} \n                                    className = \"create-textbox\" placeholder = \"First Name\"\n                                        autoComplete = \"off\"\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <h6 className = 'login-h6'>Last Name</h6>\n                                    <Form.Control onChange = {(e) =>\n                                        this.setState({lastName: e.target.value})} \n                                    className = \"create-textbox\" placeholder = \"Last Name\"\n                                        autoComplete = \"off\"\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <h6 className = 'login-h6'>Email</h6>\n                                    <Form.Control onChange = {(e) => \n                                        this.setState({new_email:  e.target.value})} \n                                    className = \"create-textbox\" placeholder = \"Email\"\n                                    autoComplete = \"off\"\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <h6 className = 'login-h6'>Password</h6>\n                                    <Form.Control onChange = {(e) =>\n                                        this.handleCreatePasswordChange(e.target.value)}\n                                    className = \"create-textbox\" placeholder = \"Password\"\n                                        type = \"password\" autoComplete = \"off\"\n                                    />\n                                    <h5 className = \"password-info\">{this.state.password_info}</h5>\n                                </Form.Group>\n                                <Form.Group>\n                                    <h6 className = 'login-h6'>Retype Password</h6>\n                                    <Form.Control onChange = {(e) =>\n                                        this.setState({retype_password: e.target.value})}\n                                    className = \"create-textbox\" placeholder = \"Password\"\n                                        type = \"password\" autoComplete = \"off\"\n                                    />\n                                </Form.Group>\n                                <h5 className = \"error-message\">{this.state.message}</h5>\n                                <div>\n                                <Button onClick = {() =>\n                                this.handleCreate(this.state.firstName, this.state.lastName, this.state.new_email, \n                                this.state.new_password, this.state.retype_password)}\n                                className = \"done\">Done</Button>\n                                <Button onClick = {() => this.setState({create: false})}>Back</Button>\n                                </div>\n                            </Form>\n                        </Card>\n                    </div>\n                    <footer>\n                        <Card className=\"app-footer login-footer create-footer\">\n                            <Card.Header><h4>Learn More About FBLA</h4></Card.Header>\n                            <Card.Body className=\"card-body\">\n                            <div id=\"fbla-links\">\n                            <a target=\"_blank\" href=\"https://www.fbla-pbl.org/about/\">\n                                <Image src={fblaLogo}/>\n                            </a>\n                            <a target=\"_blank\" href=\"https://www.cafbla.org/domain/10\">\n                                <Image src={cafblaLogo}/>\n                            </a>\n                            <a target=\"_blank\" href=\"https://www.hhsfbla.com\">\n                                <Image src=\"https://pbs.twimg.com/profile_images/634932700990668800/J4KrGcmG_400x400.jpg\"/>\n                            </a>\n                            </div>\n                            </Card.Body>\n                            <Card.Footer>© 2021 - Aaditya Raj</Card.Footer>\n                        </Card>\n                    </footer>\n                    \n                </div>\n                // <div className = \"home-screen\">\n                //     <Jumbotron className = \"jumbo\">\n                //         <h1>FBLA Expert!</h1>\n                //         <h4>Test Your Knowledge About FBLA!</h4>\n                //     </Jumbotron>\n                //     <Card bg = \"light\" text = \"dark\">\n                //         <Card.Header className = \"card-header\"><h2>Create Account</h2></Card.Header>\n                //         <Card.Body className = \"login-wrapper\">\n                //             <Form>\n                //                 <Form.Group>\n                //                     <h6 className = 'login-h6'>First Name</h6>\n                //                     <Form.Control onChange = {(e) => \n                //                         this.setState({firstName: e.target.value})} \n                //                     className = \"create-textbox\" placeholder = \"First Name\"\n                //                         autoComplete = \"off\"\n                //                     />\n                //                 </Form.Group>\n                //                 <Form.Group>\n                //                     <h6 className = 'login-h6'>Last Name</h6>\n                //                     <Form.Control onChange = {(e) =>\n                //                         this.setState({lastName: e.target.value})} \n                //                     className = \"create-textbox\" placeholder = \"Last Name\"\n                //                         autoComplete = \"off\"\n                //                     />\n                //                 </Form.Group>\n                //                 <Form.Group>\n                //                     <h6 className = 'login-h6'>Email</h6>\n                //                     <Form.Control onChange = {(e) => \n                //                         this.setState({new_email:  e.target.value})} \n                //                     className = \"create-textbox\" placeholder = \"Email\"\n                //                     autoComplete = \"off\"\n                //                     />\n                //                 </Form.Group>\n                //                 <Form.Group>\n                //                     <h6 className = 'login-h6'>Password</h6>\n                //                     <Form.Control onChange = {(e) =>\n                //                         this.handleCreatePasswordChange(e.target.value)}\n                //                     className = \"create-textbox\" placeholder = \"Password\"\n                //                         type = \"password\" autoComplete = \"off\"\n                //                     />\n                //                     <h5 className = \"password-info\">{this.state.password_info}</h5>\n                //                 </Form.Group>\n                //                 <Form.Group>\n                //                     <h6 className = 'login-h6'>Retype Password</h6>\n                //                     <Form.Control onChange = {(e) =>\n                //                         this.setState({retype_password: e.target.value})}\n                //                     className = \"create-textbox\" placeholder = \"Password\"\n                //                         type = \"password\" autoComplete = \"off\"\n                //                     />\n                //                 </Form.Group>\n                //                 <h5 className = \"error-message\">{this.state.message}</h5>\n                //                 <Button onClick = {() =>\n                //                 this.handleCreate(this.state.firstName, this.state.lastName, this.state.new_email, \n                //                 this.state.new_password, this.state.retype_password)}\n                //                 className = \"done\">Done</Button>\n                //                 <Button onClick = {() => this.setState({create: false})}>Back</Button>\n                //             </Form>\n                //         </Card.Body>\n                //     </Card>\n                // </div>\n            )\n        } else{\n            return(\n                <div className = \"home-screen\">\n                    <Jumbotron className = \"jumbo\">\n                        <h1>FBLA Expert</h1>\n                        <h4>Test Your Knowledge About FBLA!</h4>\n                    </Jumbotron>\n                    <div className = \"home-screen-content\">\n                        <Card className = \"login-wrapper\" bg=\"light\">\n                            <h2>Login</h2>\n                            <Form>\n                                <Form.Group>\n                                    <Form.Control onChange = {(e) =>\n                                        this.setState({login_email: e.target.value})} \n                                    className = \"login-textbox\" placeholder = \"Email\"\n                                        autoComplete = \"off\"\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Control onChange = {(e) =>\n                                        this.setState({login_pw: e.target.value})}\n                                    className = \"login-textbox\" placeholder = \"Password\"\n                                        type = \"password\" autoComplete = \"off\"\n                                    />\n                                </Form.Group>\n                                <h5>{this.state.login_error}</h5>\n                                <Button className = \"Login\" onClick = {() => \n                                this.handleLogin(this.state.login_email, this.state.login_pw)}>Login</Button>\n                                <Button className = \"sign-up\" \n                                variant = \"link\" onClick = {() => this.setState({\n                                    create: true\n                                })}>Sign Up</Button>\n                            </Form>\n                        </Card>\n                        {/* <div className = \"About-FBLA\">\n                            <Card.Title className=\"home-title\"><h4>Learn more about FBLA</h4></Card.Title>\n                            <div className = \"FBLA-website\">\n                                <Card.Img src=\"https://logodix.com/logo/1610537.png\"/>\n                                <Button target=\"_blank\" href=\"https://www.fbla-pbl.org/about/\" variant=\"outline-primary\">View Website</Button>\n                            </div>                            \n                        </div> */}\n                    </div>\n                    <footer>\n                        <Card className=\"app-footer login-footer\">\n                            <Card.Header><h4>Learn More About FBLA</h4></Card.Header>\n                            <Card.Body className=\"card-body\">\n                            <div id=\"fbla-links\">\n                            <a target=\"_blank\" href=\"https://www.fbla-pbl.org/about/\">\n                                <Image src={fblaLogo}/>\n                            </a>\n                            <a target=\"_blank\" href=\"https://www.cafbla.org/domain/10\">\n                                <Image src={cafblaLogo}/>\n                            </a>\n                            <a target=\"_blank\" href=\"https://www.hhsfbla.com\">\n                                <Image src=\"https://pbs.twimg.com/profile_images/634932700990668800/J4KrGcmG_400x400.jpg\"/>\n                            </a>\n                            </div>\n                            </Card.Body>\n                            <Card.Footer>© 2021 - Aaditya Raj</Card.Footer>\n                        </Card>\n                    </footer>\n                    \n                </div>\n            )\n        }\n    }\n}\n\nexport default LoginPage;","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/Dropdown/Dropdown.js",[],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/TrueFalse/TrueFalse.js",["84","85"],"import React from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\"\nimport Button from \"react-bootstrap/Button\"\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\"\nimport \"./TrueFalse.css\"\nimport checkmark from \"../../../assets/check.svg\"\nimport xmark from \"../../../assets/x.svg\"\nimport { Form } from \"react-bootstrap\";\n\n//Displays true-false dropdown for quiz page and a results display\n\nclass TrueFalse extends React.Component {\n    render() {\n        if (this.props.disabled === 'false'){\n\n            return (\n                // <Dropdown id=\"dropdown-button\" as={ButtonGroup} onSelect = {this.props.onSelect}>\n                //     <Button variant=\"secondary\">{this.props.value}</Button>\n    \n                //     <Dropdown.Toggle split variant=\"secondary\" id=\"dropdown-split-basic\" />\n    \n                //     <Dropdown.Menu>\n                //         <Dropdown.Item eventKey=\"True\">True</Dropdown.Item>\n                //         <Dropdown.Item eventKey=\"False\">False</Dropdown.Item>\n                //     </Dropdown.Menu>\n                // </Dropdown>\n                <Form>\n                    <Form.Group>\n                        <Form.Check \n                        type=\"radio\"\n                        key={`formHorizontalRadios1`}\n                        label=\"True\"\n                        name=\"formHorizontalRadios\"\n                        onChange = {(e) => this.props.onSelect}\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Check \n                        type=\"radio\"\n                        key={`formHorizontalRadios1`}\n                        label=\"False\"\n                        name=\"formHorizontalRadios\"\n                        onChange = {(e) => this.props.onSelect}\n                        />\n                    </Form.Group>\n                </Form>\n                    \n                \n            )\n        } else{\n            return(\n                <div className = 'TF-result'>\n                    <Button disabled \n                    className = {this.props.answer ? 'correctTF' : 'incorrectTF'}>\n                    True <img src = {this.props.answer ? checkmark : xmark}\n                        alt = {this.props.answer ? 'checkmark' : 'xmark'}\n                    /></Button>\n                    <Button disabled \n                    className = {this.props.answer ? 'incorrectTF' : 'correctTF'}>\n                    False <img src = {this.props.answer ? xmark : checkmark}\n                    alt = {this.props.answer ? 'xmark' : 'checkmark'}/></Button>\n                </div>\n            )\n        }\n    }\n}\n\nexport default TrueFalse;",["86","87"],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/Report/GeneratePDF.js",[],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/MultChoice/MultChoice.js",[],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/Report/Statistics.js",[],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Leaderboard/Leaderboard.js",[],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/DataFetching/GetData.js",[],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/FillTheBlank/FillTheBlank.js",[],"/Users/araj/Desktop/Coding/cap/cap_project/src/App-test.js",["88","89","90"],"//we are using firebase cloud firestore database\nimport React from \"react\";\n// import react-router from \"react-router-dom\"\nimport './App.css';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport 'firebase/firestore';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\n\n//Login page and function for getting the question data from the database\nimport LoginPage from \"./components/Login/Login\"\nimport Home from \"./components/Home/Home\"\nimport Quiz from \"./components/Quiz/Quiz.js\"\nimport Feedback from \"./components/Feedback/Feedback.js\"\n\n//styling components from React Bootstrap\nimport Button from \"react-bootstrap/Button\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Card from \"react-bootstrap/Card\";\nimport Image from \"react-bootstrap/Image\"\n\nimport fblaLogo from \"./assets/fbla-logo.png\"\nimport cafblaLogo from \"./assets/cafbla-logo.png\"\n\n\n//features for the results page: generating report, and viewing statistics\nimport ViewStatistics from \"./components/Quiz/Report/Statistics\"\nimport Leaderboard from \"./components/Leaderboard/Leaderboard\"\n\n//main class that is being loaded into the HTML\nclass AppTest extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      login_error: false,\n      create_error: false,\n      create_error_message: null,\n      userData: null,\n      allDataFetched: false,\n      userDataFetched:false\n    }\n\n  }\n  \n \n\n  componentDidMount(){\n    firebase.auth().onAuthStateChanged(async firebaseUser => {\n      if (firebaseUser) {\n        this.getUserData()\n        // .then(() => {\n        console.log(this.state.userData)\n        this.setState({\n            logged_in: true,\n        })\n        // })\n       \n      } else {\n        this.setState({\n          logged_in : false,\n          written: false,\n          login_error: false,\n          create_error: false,\n        })\n      }\n    })\n  }\n  \n  getUserData = async () => {\n    var firebaseApp = firebase.apps[0]\n    this.db = firebaseApp.firestore()\n    this.allUserData = await this.db.collection(\"UserData\").get()\n    this.setState({\n      allDataFetched: true\n    })\n    // this.allUserData = this.db.collection(\"UserData\")\n    this.readUserRef = this.db.collection(\"UserData\").where(\n      \"Email\", \"==\", firebase.auth().currentUser.email)\n    await this.readUserRef.get().then((querySnapshot) => {\n      querySnapshot.forEach((doc) => {\n        this.setState({\n            userData: doc.data(),\n            userDataFetched: true\n        })\n      })\n    })\n  }\n\n  updateUserData = async (newUserData) => {\n      this.setState({\n          userData: newUserData\n      })\n      this.allUserData = await this.db.collection(\"UserData\").get()\n      this.setState({\n        allDataFetched: true\n      })\n  }\n  \n \n  //below three functions use firebase auth for login\n  //authenticating existing account \n  handleLogin = (email, password) => {\n    const auth = firebase.auth();\n    const promise = auth.signInWithEmailAndPassword(email, password);\n    promise.catch(() => {\n      this.setState({login_error: false})\n      this.forceUpdate()\n      this.setState({login_error: true})\n      this.forceUpdate()\n    })\n    firebase.auth().onAuthStateChanged((firebaseUser) => {\n      if (firebaseUser){\n        this.getUserData()\n        this.setState({\n            logged_in: true,\n        })\n      }\n    })\n  }\n\n  handleLogout = () => {\n    const auth = firebase.auth();\n    auth.signOut();\n    this.setState({userData:null, userDataFetched:false})\n    // window.location.reload(true)\n  }\n\n  //creating new account & writing new user info into database\n  handleCreate = (firstName, lastName, email, password) => {\n    const auth = firebase.auth();\n    const promise = auth.createUserWithEmailAndPassword(email, password);\n    promise.catch((e) =>{ \n      this.setState({create_error: false})\n      this.forceUpdate()\n      this.setState({\n        create_error: true,\n        create_error_message: e.message\n      })})\n      this.forceUpdate()\n    firebase.auth().onAuthStateChanged((firebaseUser) => {\n      if (firebaseUser) {\n        this.setState({\n        //   logged_in : true,\n          create_error: false\n        })\n        firebaseUser.updateProfile({\n          displayName: firstName + \" \" + lastName\n        })\n        if (!(this.state.written) && !(this.state.create_error)){\n            this.db = firebase.apps[0].firestore()\n            this.writeUserRef = this.db.collection(\"UserData\").doc()\n            this.writeUserRef.set({\n                Name: firstName + \" \" + lastName,\n                Email: email,\n                Scores: [],\n                Highest_Score: null,\n                Lowest_Score: null,\n                Average: null\n            }).then( () => {\n                this.getUserData()\n                // .then(() => {\n                    this.setState({\n                        logged_in: true,\n                        written: true\n                    })\n                // })\n                // this.setState({written: true})\n            })\n        }\n      }\n    }) \n  }\n\n  \n\n  render = () => {\n    if (!this.state.logged_in){\n      return (\n          //rendering Login component from another file, uses passed props to reference\n          <>\n          <LoginPage id=\"loginpage\" onLogin = {this.handleLogin} onCreate = {this.handleCreate}\n          error = {this.state.login_error} create_error = {this.state.create_error}\n            create_error_message = {this.state.create_error_message}\n          />\n          </>\n      )\n    } else {\n      let components = [];\n      let topics = [\"Know Your Numbers\", \"Dates and Times\", \"People\", \"Places\", \"Terms, Creeds, Mottos\", \"Potpourri\"]\n        for (let index = 0; index < topics.length; index++) {\n          var path= \"/\" + topics[index]\n          components.push(\n            <Route path={path}>\n                <Quiz selected={topics[index]} \n                onUserDataChange = {(newUserData) => this.updateUserData(newUserData)}/>\n            </Route>\n          )\n        }\n        return(\n          <>\n                <Router>\n                    <div>\n                        <nav>\n                            <ul>\n                                <li><Link to=\"/\">Home</Link></li>\n                                {/* <li><Link to=\"/past-quizzes\">Past Quizzes</Link></li> */}\n                                <li><Link to=\"/leaderboard\">Leaderboard</Link></li>\n                                <li><Link to=\"/feedback\">Feedback</Link></li>\n                                <li>\n                                {/* <ViewStatistics\n                                        itemFormat = \"navItem\" highScore = {this.state.userData.Highest_Score}\n                                        lowestScore = {this.state.userData.Lowest_Score} average = {this.state.userData.Average}\n                                        attempts = {this.state.userData.Scores.length}\n                                        /> */}\n                                <ViewStatistics\n                                itemFormat = \"navItem\" data={this.state.userData} fetched={this.state.userDataFetched}\n                                /> \n                                </li>\n                                <li><Button onClick={this.handleLogout} className=\"user-option hidden-option\" variant=\"link\">Logout</Button></li>\n                                <Dropdown className = \"logout\">\n                                    <Dropdown.Toggle variant=\"dark\">\n                                        {firebase.auth().currentUser.displayName}\n                                    </Dropdown.Toggle>\n\n                                    <Dropdown.Menu>\n                                        <Dropdown.Item eventKey={'logout'}\n                                        onSelect = {this.handleLogout}\n                                        key = {'logout'}>Logout\n                                        </Dropdown.Item>\n                                        {/* <ViewStatistics\n                                        itemFormat = \"menuItem\" highScore = {this.state.userData.Highest_Score}\n                                        lowestScore = {this.state.userData.Lowest_Score} average = {this.state.userData.Average}\n                                        attempts = {this.state.userData.Scores.length}\n                                        /> */}\n                                    </Dropdown.Menu>\n                                </Dropdown>\n                            </ul>\n                        </nav>\n                        <Switch>\n                            {/* <Route exact path=\"/\" component={<h2>Home stuff</h2>}/>\n                            <Route exact path=\"/quizzes\" component={<h2>Quiz</h2>}/>\n                            onUserDataChange = {(newUserData) => this.updateUserData(newUserData)}\n                            <Route exact path=\"/past-quizzes\" component={<h2>Past quizzes</h2>}/>\n                            <Route exact path=\"/leaderboard\" component={<h2>Leaderboard</h2>}/>\n                            <Route exact path=\"/feedback\" component={<h2>Help us improve!</h2>}/> */}\n                            <Route exact path=\"/\">\n                                {/* <Quiz onUserDataChange = {(newUserData) => this.updateUserData(newUserData)}/> */}\n                                <Home/>\n                            </Route>\n                            {/* <Route path=\"/past-quizzes\">\n                                <h2>past quizzes</h2>\n                                <Button onClick={() => showPastQuizzes()}>click this!</Button>\n                            </Route> */}\n                            <Route path=\"/leaderboard\">\n                                {/* <div className = \"leaderboard\"> */}\n                                    <Leaderboard fetched={this.state.allDataFetched}\n                                    data = {this.allUserData}/>     \n                                {/* </div> */}\n                            </Route>\n                            <Route path=\"/feedback\">\n                                <Feedback/>\n                            </Route>\n                            {components}\n                        </Switch>\n\n                    </div>\n                </Router>\n                <footer>\n                <Card className=\"app-footer\">\n                  <Card.Header><h4>Learn More About FBLA</h4></Card.Header>\n                  <Card.Body className=\"card-body\">\n                    <div id=\"fbla-links\">\n                    <a target=\"_blank\" href=\"https://www.fbla-pbl.org/about/\">\n                      <Image src={fblaLogo}/>\n                    </a>\n                    <a target=\"_blank\" href=\"https://www.cafbla.org/domain/10\">\n                      <Image src={cafblaLogo}/>\n                    </a>\n                    <a target=\"_blank\" href=\"https://www.hhsfbla.com\">\n                      <Image src=\"https://pbs.twimg.com/profile_images/634932700990668800/J4KrGcmG_400x400.jpg\"/>\n                    </a>\n                    </div>\n                  </Card.Body>\n                  <Card.Footer>© 2021 - Aaditya Raj</Card.Footer>\n                </Card>\n                </footer>\n            </>\n        )\n    }\n    }\n}\n\nexport default AppTest;","/Users/araj/Desktop/Coding/cap/cap_project/src/components/Quiz/Quiz.js",[],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Feedback/Feedback.js",["91"],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Past-Quizzes/Past-Quizzes.js",["92"],"import React from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport 'firebase/firestore';\n\nconst showPastQuizzes = () =>{\n\n        var currentUserEmail = firebase.auth().currentUser.email\n        var storage = firebase.storage()\n        var pathRef = storage.ref().child(`Results/${currentUserEmail}`)\n        pathRef.listAll().then((res) => {\n            res.items.forEach((itemRef) => {\n                console.log(itemRef)\n                itemRef.getMetadata().then((metaData) => {\n                    console.log(metaData.timeCreated, metaData.Score, metaData.Topic)\n                })\n            })\n        })\n}\n\nexport default showPastQuizzes;",["93","94"],"/Users/araj/Desktop/Coding/cap/cap_project/src/components/Home/Home.js",["95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"96","replacedBy":"100"},{"ruleId":"98","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":221,"column":32,"nodeType":"104","endLine":221,"endColumn":47},{"ruleId":"102","severity":1,"message":"103","line":224,"column":32,"nodeType":"104","endLine":224,"endColumn":47},{"ruleId":"102","severity":1,"message":"103","line":227,"column":32,"nodeType":"104","endLine":227,"endColumn":47},{"ruleId":"102","severity":1,"message":"103","line":345,"column":32,"nodeType":"104","endLine":345,"endColumn":47},{"ruleId":"102","severity":1,"message":"103","line":348,"column":32,"nodeType":"104","endLine":348,"endColumn":47},{"ruleId":"102","severity":1,"message":"103","line":351,"column":32,"nodeType":"104","endLine":351,"endColumn":47},{"ruleId":"105","severity":1,"message":"106","line":2,"column":8,"nodeType":"107","messageId":"108","endLine":2,"endColumn":16},{"ruleId":"105","severity":1,"message":"109","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":19},{"ruleId":"96","replacedBy":"110"},{"ruleId":"98","replacedBy":"111"},{"ruleId":"102","severity":1,"message":"103","line":278,"column":24,"nodeType":"104","endLine":278,"endColumn":39},{"ruleId":"102","severity":1,"message":"103","line":281,"column":24,"nodeType":"104","endLine":281,"endColumn":39},{"ruleId":"102","severity":1,"message":"103","line":284,"column":24,"nodeType":"104","endLine":284,"endColumn":39},{"ruleId":"105","severity":1,"message":"112","line":12,"column":9,"nodeType":"107","messageId":"108","endLine":12,"endColumn":17},{"ruleId":"105","severity":1,"message":"113","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":13},{"ruleId":"96","replacedBy":"114"},{"ruleId":"98","replacedBy":"115"},{"ruleId":"105","severity":1,"message":"116","line":1,"column":8,"nodeType":"107","messageId":"108","endLine":1,"endColumn":16},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],["117"],["118"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-unused-vars","'Dropdown' is defined but never used.","Identifier","unusedVar","'ButtonGroup' is defined but never used.",["117"],["118"],"'Redirect' is defined but never used.","'React' is defined but never used.",["117"],["118"],"'firebase' is defined but never used.","no-global-assign","no-unsafe-negation"]